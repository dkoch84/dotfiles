# Autogenerated config.py
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Uncomment this to still load settings configured via autoconfig.yml
config.load_autoconfig()

# Aliases for commands. The keys of the given dictionary are the
# aliases, while the values are the commands they map to.
# Type: Dict
c.aliases = {'q': 'quit', 'w': 'session-save', 'wq': 'quit --save'}

# Background color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.bg = '#f7f8f3'

# Bottom border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.border.bottom = '#f7f8f3'

# Top border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.border.top = '#f7f8f3'

# Foreground color of completion widget category headers.
# Type: QtColor
c.colors.completion.category.fg = '#db7681'

# Background color of the completion widget for even rows.
# Type: QssColor
c.colors.completion.even.bg = '#f7f8f3'

# Text color of the completion widget.
# Type: QtColor
c.colors.completion.fg = '#6d767d'

# Background color of the selected completion item.
# Type: QssColor
c.colors.completion.item.selected.bg = '#f7f8f3'

# Bottom border color of the selected completion item.
# Type: QssColor
c.colors.completion.item.selected.border.bottom = '#f7f8f3'

# Top border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.item.selected.border.top = '#f7f8f3'

# Foreground color of the selected completion item.
# Type: QtColor
c.colors.completion.item.selected.fg = '#4e9bcf'

# Foreground color of the matched text in the completion.
# Type: QssColor
c.colors.completion.match.fg = '#db7681'

# Background color of the completion widget for odd rows.
# Type: QssColor
c.colors.completion.odd.bg = '#f7f8f3'

# Color of the scrollbar in completion view
# Type: QssColor
c.colors.completion.scrollbar.bg = '#eae6ed'

# Color of the scrollbar handle in completion view.
# Type: QssColor
c.colors.completion.scrollbar.fg = '#4e9bcf'

# Background color for the download bar.
# Type: QssColor
c.colors.downloads.bar.bg = '#eae6ed'

# Background color for downloads with errors.
# Type: QtColor
c.colors.downloads.error.bg = '#db7681'

# Foreground color for downloads with errors.
# Type: QtColor
c.colors.downloads.error.fg = '#61707a'

# Color gradient start for download backgrounds.
# Type: QtColor
c.colors.downloads.start.bg = '#eae6ed'

# Color gradient start for download text.
# Type: QtColor
c.colors.downloads.start.fg = '#4e9bcf'

# Color gradient stop for download backgrounds.
# Type: QtColor
c.colors.downloads.stop.bg = '#4e9bcf'

# Color gradient end for download text.
# Type: QtColor
c.colors.downloads.stop.fg = '#61707a'

# Background color for hints. Note that you can use a `rgba(...)` value
# for transparency.
# Type: QssColor
c.colors.hints.bg = '#eae6ed'

# Font color for hints.
# Type: QssColor
c.colors.hints.fg = '#4e9bcf'

# Font color for the matched part of hints.
# Type: QssColor
c.colors.hints.match.fg = '#61707a'

# Background color of the keyhint widget.
# Type: QssColor
c.colors.keyhint.bg = '#eae6ed'

# Text color for the keyhint widget.
# Type: QssColor
c.colors.keyhint.fg = '#61707a'

# Highlight color for keys to complete the current keychain.
# Type: QssColor
c.colors.keyhint.suffix.fg = '#61707a'

# Background color for prompts.
# Type: QssColor
c.colors.prompts.bg = '#eae6ed'

# Border used around UI elements in prompts.
# Type: String
c.colors.prompts.border = '1px #4e9bcf'

# Foreground color for prompts.
# Type: QssColor
c.colors.prompts.fg = '#61707a'

# Background color for the selected item in filename prompts.
# Type: QssColor
c.colors.prompts.selected.bg = '#f7f8f3'

# Background color of the statusbar in command mode.
# Type: QssColor
c.colors.statusbar.command.bg = '#f7f8f3'

# Foreground color of the statusbar in command mode.
# Type: QssColor
c.colors.statusbar.command.fg = '#61707a'

# Background color of the statusbar in insert mode.
# Type: QssColor
c.colors.statusbar.insert.bg = '#eae6ed'

# Foreground color of the statusbar in insert mode.
# Type: QssColor
c.colors.statusbar.insert.fg = '#61707a'

# Background color of the statusbar.
# Type: QssColor
c.colors.statusbar.normal.bg = '#f7f8f3'

# Foreground color of the statusbar.
# Type: QssColor
c.colors.statusbar.normal.fg = '#61707a'

# Foreground color of the statusbar in private browsing mode.
# Type: QssColor
c.colors.statusbar.private.fg = '#db7681'

# Background color of the progress bar.
# Type: QssColor
c.colors.statusbar.progress.bg = '#4e9bcf'

# Default foreground color of the URL in the statusbar.
# Type: QssColor
c.colors.statusbar.url.fg = '#4e9bcf'

# Foreground color of the URL in the statusbar for hovered links.
# Type: QssColor
c.colors.statusbar.url.hover.fg = '#db7681'

# Foreground color of the URL in the statusbar on successful load
# (http).
# Type: QssColor
c.colors.statusbar.url.success.http.fg = '#4e9bcf'

# Foreground color of the URL in the statusbar on successful load
# (https).
# Type: QssColor
c.colors.statusbar.url.success.https.fg = '#4e9bcf'

# Background color of the tab bar.
# Type: QtColor
c.colors.tabs.bar.bg = '#f7f8f3'

# Background color of unselected even tabs.
# Type: QtColor
c.colors.tabs.even.bg = '#f7f8f3'

# Foreground color of unselected even tabs.
# Type: QtColor
c.colors.tabs.even.fg = '#61707a'

# Color for the tab indicator on errors.
# Type: QtColor
c.colors.tabs.indicator.error = '#db7681'

# Color gradient start for the tab indicator.
# Type: QtColor
c.colors.tabs.indicator.start = '#f7f8f3'

# Color gradient end for the tab indicator.
# Type: QtColor
c.colors.tabs.indicator.stop = '#f7f8f3'

# Background color of unselected odd tabs.
# Type: QtColor
c.colors.tabs.odd.bg = '#f7f8f3'

# Foreground color of unselected odd tabs.
# Type: QtColor
c.colors.tabs.odd.fg = '#61707a'

# Background color of selected even tabs.
# Type: QtColor
c.colors.tabs.selected.even.bg = '#f7f8f3'


# Foreground color of selected even tabs.
# Type: QtColor
c.colors.tabs.selected.even.fg = '#4e9bcf'

# Background color of selected odd tabs.
# Type: QtColor
c.colors.tabs.selected.odd.bg = '#f7f8f3'

# Foreground color of selected odd tabs.
# Type: QtColor
c.colors.tabs.selected.odd.fg = '#4e9bcf'

# Background color for webpages if unset (or empty to use the theme's
# color)
# Type: QtColor
c.colors.webpage.bg = '#f7f8f3'

# The height of the completion, in px or as percentage of the window.
# Type: PercOrInt
c.completion.height = '35%'

# When to show the completion window
c.completion.show = 'always'

# Width of completion scrollbar
c.completion.scrollbar.width = 0
c.completion.scrollbar.padding = 0

# Minimum number of characters required to show completion
c.completion.min_chars = 2

# The directory to save downloads to. If unset, a sensible os-specific
# default is used.
# Type: Directory
c.downloads.location.directory = '/home/daniel/downloads'

# Prompt the user for the download location. If set to false,
# `downloads.location.directory` will be used.
# Type: Bool
c.downloads.location.prompt = False

# Number of milliseconds to wait before removing finished downloads. If
# set to -1, downloads are never removed.
# Type: Int
c.downloads.remove_finished = 30

# Font used in the completion categories.
# Type: Font
c.fonts.completion.category = '11pt default_family'

# Font used in the completion widget.
# Type: Font
c.fonts.completion.entry = '11pt default_family'

# Font used for the debugging console.
# Type: QtFont
c.fonts.debug_console = '11pt default_family'

# Font used for the downloadbar.
# Type: Font
c.fonts.downloads = '11pt default_family'

# Font used in the keyhint widget.
# Type: Font
c.fonts.keyhint = '11pt default_family'

# Font used for error messages.
# Type: Font
c.fonts.messages.error = '11pt default_family'

# Font used for info messages.
# Type: Font
c.fonts.messages.info = '11pt default_family'

# Font used for warning messages.
# Type: Font
c.fonts.messages.warning = '11pt default_family'

# Default default_family fonts. Whenever "default_family" is used in a font
# setting, it's replaced with the fonts listed here.
# Type: Font
c.fonts.default_family = 'Iosevka Term SS08'

# Font used for prompts.
# Type: Font
c.fonts.prompts = '11pt sans-serif'

# Font used in the statusbar.
# Type: Font
c.fonts.statusbar = '11pt default_family'

# Font used in the tab bar.
# Type: QtFont
c.fonts.tabs.selected = '11pt default_family'

# Font used in the tab bar.
# Type: QtFont
c.fonts.tabs.unselected = '11pt default_family'

# The default font size for regular text.
# Type: Int
c.fonts.web.size.default = 16

# The default font size for fixed-pitch text.
# Type: Int
c.fonts.web.size.default_fixed = 16

# CSS border value for hints.
# Type: String
c.hints.border = '1px solid #eae6ed'

# Chars used for hint strings.
# Type: UniqueCharString
c.hints.chars = 'asdfghjkl'

# Hide the statusbar unless a message is shown.
# Type: Bool
c.statusbar.show = 'in-mode'

# The position of the status bar.
# Type: VerticalPosition
# Valid values:
#   - top
#   - bottom
c.statusbar.position = 'bottom'

# Widgets to display on the status bar
c.statusbar.widgets = ["keypress", "url", "history", "progress"]

# On which mouse button to close tabs.
# Type: String
# Valid values:
#   - right: Close tabs on right-click.
#   - middle: Close tabs on middle-click.
#   - none: Don't close tabs using the mouse.
c.tabs.close_mouse_button = 'middle'

# Scaling for favicons in the tab bar. The tab size is unchanged, so big
# favicons also require extra `tabs.padding`.
# Type: Float
c.tabs.favicons.scale = 0.9

# Show favicons in the tab bar
c.tabs.favicons.show = 'never'

# Tabs title format
c.tabs.title.format = '{current_title}'

# How new tabs opened from another tab are positioned.
# Type: NewTabPosition
# Valid values:
#   - prev: Before the current tab.
#   - next: After the current tab.
#   - first: At the beginning.
#   - last: At the end.
c.tabs.new_position.related = 'next'

# How new tabs which aren't opened from another tab are positioned.
# Type: NewTabPosition
# Valid values:
#   - prev: Before the current tab.
#   - next: After the current tab.
#   - first: At the beginning.
#   - last: At the end.
c.tabs.new_position.unrelated = 'last'

# Padding around text for tabs
# Type: Padding
c.tabs.padding = {'bottom': 0, 'left': 0, 'right': 0, 'top': 0}

# The position of the tab bar.
# Type: Position
# Valid values:
#   - top
#   - bottom
#   - left
#   - right
c.tabs.position = 'bottom'

# When to show the tab bar.
# Type: String
# Valid values:
#   - always: Always show the tab bar.
#   - never: Always hide the tab bar.
#   - multiple: Hide the tab bar if only one tab is open.
#   - switching: Show the tab bar when switching tabs.
c.tabs.show = 'multiple'

# Open a new window for every tab.
# Type: Bool
c.tabs.tabs_are_windows = False

# Alignment of the text inside of tabs.
# Type: TextAlignment
# Valid values:
#   - left
#   - right
#   - center
c.tabs.title.alignment = 'center'

# Definitions of search engines which can be used via the address bar.
# Maps a searchengine name (such as `DEFAULT`, or `ddg`) to a URL with a
# `{}` placeholder. The placeholder will be replaced by the search term,
# use `{{` and `}}` for literal `{`/`}` signs. The searchengine named
# `DEFAULT` is used when `url.auto_search` is turned on and something
# else than a URL was entered to be opened. Other search engines can be
# used by prepending the search engine name to the search term, e.g.
# `:open google qutebrowser`.
# Type: Dict
c.url.searchengines = {'DEFAULT': 'https://duckduckgo.com/?q={} !g'}

# The page(s) to open at the start.
# Type: List of FuzzyUrl, or FuzzyUrl
c.url.start_pages = 'file:///home/daniel/web/start-page/index.html'

# The default zoom level.
# Type: Perc
c.zoom.default = '100%'

# How much to divide the mouse wheel movements to translate them into
# zoom increments.
# Type: Int
c.zoom.mouse_divider = 512


# Bindings for command mode
config.bind('<down>', 'completion-item-focus next', mode='command')
config.bind('<up>', 'completion-item-focus prev', mode='command')

# Keybinds
config.bind('<,><p>', 'spawn --userscript qute-pass --dmenu-invocation dmenu')
