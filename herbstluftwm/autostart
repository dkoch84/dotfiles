#!/usr/bin/env bash
# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# remove all existing keybindings
hc keyunbind --all

# keybindings
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close

# frame layouts and split behavior
hc keybind $Mod-Control-0 set_layout vertical      # default
hc keybind $Mod-Control-1 set_layout horizontal    # side-by-side 
hc keybind $Mod-Control-2 set_layout max           # max
hc keybind $Mod-Control-3 set-layout grid          # grid

# Program shortcuts
hc keybind $Mod-Return spawn alacritty
hc keybind $Mod-c spawn code
hc keybind $Mod-q spawn qutebrowser
hc keybind $Mod-w spawn qutebrowser.wrapper "https://youtube.com"
hc keybind $Mod-v spawn floorp -P ibm
hc keybind $Mod-b spawn floorp -P cal
hc keybind $Mod-n spawn floorp -P personal
hc keybind $Mod-e spawn qutebrowser.matrix "https://app.element.io/?pk_vid=363f734cc68968df1659978627afbc6c#/room/!UDQUAzsPpbcPRJevFT:matrix.org" 
hc keybind $Mod-t spawn /home/daniel/scripts/chromer evergy
hc keybind $Mod-d spawn dolphin --platformtheme qt6ct
hc keybind $Mod-m spawn rofi "Iosevka Term SS08 Light 14" -theme sidebar -show drun -modi drun,ssh -display-drun "run: "
hc keybind Alt-Tab spawn rofi "Iosevka Term SS08 Light 14" -theme window -show window -modi window -display-window "windows: "
#hc keybind $Mod-z spawn /home/daniel/scripts/darkmode
#hc keybind $Mod-a spawn /home/daniel/scripts/lightmode
hc keybind $Mod-Shift-s spawn flameshot gui
hc keybind $Mod-Shift-f spawn flameshot gui -p ~/shots
hc keybind XF86AudioLowerVolume spawn /home/daniel/scripts/dankvol -s 2
hc keybind XF86AudioRaiseVolume spawn /home/daniel/scripts/dankvol -d 2

# fn keybinds
 hc keybind XF86MonBrightnessDown spawn /usr/bin/light -U 5
 hc keybind XF86MonBrightnessUp   spawn /usr/bin/light -A 5

# basic movement
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# moving clients to different tags/desktops
hc keybind $Mod-Shift-1     move 1
hc keybind $Mod-Shift-2     move 2
hc keybind $Mod-Shift-3     move 3
hc keybind $Mod-Shift-4     move 4

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   top  0.5
hc keybind $Mod-o       split   left   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.005
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} )

# Replace the default section for tags in your autostart by the following:
# This is the default tag section of the autostart, with a single change:
# In the use_index keybinding, check the presence of the my_monitor attribute,
# before focusing the desired tag.
hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        # first check if the tag is locked to some monitor.
        # if so, first focus the monitor
        hc keybind "$Mod-$key" \
            chain , silent substitute M tags."$i".my_monitor \
                        focus_monitor M \
                  , use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done


# Add a keybinding for locking the current tag to the monitor it is displayed
# on. This is done by saving the current monitor index in the my_monitor
# attribute of the focused tag. If the monitor has a (nonempty) name, use the
# monitor name instead of its index.
#herbstclient keybind $Mod-t chain \
    , new_attr string tags.focus.my_monitor \
    , substitute M monitors.focus.index set_attr tags.focus.my_monitor M \
    , try and \
        . compare monitors.focus.name != "" \
        . substitute M monitors.focus.name \
                set_attr tags.focus.my_monitor M

# Add a keybinding for removing the lock
herbstclient keybind $Mod-Shift-t \
    remove_attr tags.focus.my_monitor

# Statically define which tag should be send to which monitor
lock_tag_to_monitor() {
    herbstclient chain \
        , new_attr string tags.by-name."$1".my_monitor \
        , set_attr tags.by-name."$1".my_monitor "$2"
}
# Already lock some of the tags to a monitor, for example:
# lock the second tag to the monitor with index 0
#lock_tag_to_monitor 6 1
#lock_tag_to_monitor 7 1
#lock_tag_to_monitor 1 0
#lock_tag_to_monitor 2 0
#lock_tag_to_monitor 3 1
#lock_tag_to_monitor 4 1
#lock_tag_to_monitor 5 1
#lock_tag_to_monitor 8 2
#lock_tag_to_moniotr 9 2

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile togglete an empty f
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Shift-Button1 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-g cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#f7f8f3'
hc set frame_border_normal_color '#f7f8f3'
hc set frame_bg_normal_color '#f7f8f3'
hc set frame_bg_active_color '#f7f8f3'

hc set frame_border_width 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_gap 0

hc attr theme.active.color '#4e9bcf'
hc attr theme.normal.color '#c9c5cb'
hc attr theme.urgent.color '#f7f8f3'
hc attr theme.inner_width 0
tc attr theme.inner_color '#f7f8f3'
hc attr theme.border_width 4
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 0
hc attr theme.floating.outer_color '#c9c5cb'
hc attr theme.active.inner_color '#f7f8f3'
hc attr theme.active.outer_color '#4e9bcf'
hc attr theme.background_color '#f7f8f3'

hc set window_gap 4
hc set frame_padding -2
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 0
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=off
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off


# unlock, just to be sure
hc unlock

herbstclient set tree_style '╾│ ├└╼─┐'

# do multi monitor setup here, e.g.:
hc set_monitors 1440x2560+0+1876 4096x2160+1440+2160 1440x2560+5536+2160 3840x2160+1440+0
# or simply:
#hc detect_monitors
hc add_monitor 4096x2160+1440+2160 9 float2
hc raise_monitor float2
hc lock_tag 9 float2
hc floating 9 on

hc add_monitor 3840x2160+1440+0 8 float1
hc raise_monitor float1
hc lock_tag 8 float1
hc floating 8 on

# padding for panel
hc pad 0  28 0 0 0
hc pad 1  0 0 0 0
hc pad 2  0 0 0 0
hc pad 3  0 0 0 0

# RGB
liquidctl --match aura set sync color static 5930fc

# set environment variables
hc setenv CHROME_EXECUTABLE /usr/bin/google-chrome-stable
hc setenv QT_QPA_PLATFORMTHEME qt5ct
hc setenv npm_config_prefix ~/.node_modules
xmodmap /home/daniel/.Xmodmap
hc setenv STEAM_FORCE_DESKTOPUI_SCALING 1.0

# start programs once
{
    command="silent new_attr bool my_not_first_autostart"

    if hc $command;
    then
        xfce4-power-manager &
        tint2 &
        redshift-gtk &
        kdeconnect-indicator &
        picom -b --unredir-if-possible &
        dunst &
        mpdas -c /home/daniel/.config/mpdasrc &
        sleep 3
        nitrogen --restore &
        liquidctl initialize all &
        /usr/lib/polkit-kde-authentication-agent-1 &
        streamdeck -n &
    fi      
}
